name: CI/CD

on:
  workflow_dispatch:
  repository_dispatch:
    types: [tenant_creation_event]

jobs:
  run-app:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: TestWorkflowApp

    steps:
    - name: "Check out code"
      uses: actions/checkout@v3

    - name: "Setup dotnet"
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: | 
          6
    
    - name: "Install dependencies"
      run: dotnet restore

    - name: "Build"
      run: dotnet build

    - name: "Print payload"
      run: 'echo "payload: ${{ toJson(github.event.client_payload) }}"'

    - name: "Execute migrations"
      id: "ExecuteMigrations"
      continue-on-error: true
      run: |
        . <({ err=$({ out=$(dotnet run ${{ github.event.client_payload.environment }} ${{ github.event.client_payload.databaseName }} }}); ret=$?; } 2>&1; declare -p out ret >&2); declare -p err; } 2>&1)
        echo "Output : ${out}"
        echo "Error: ${err}"
        echo MIGRATIONS_RUN_ERROR=${err} >> $GITHUB_OUTPUT
        echo "Command exit code: ${ret}"
        if [ $ret -eq 0 ]
        then
          exit 0
        else
          exit $ret
        fi
  
    - name: "Get Integration API access token"
      id: BearerTokenRequest
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.IntegrationApiTokenEndpoint }}
        method: 'POST'
        username: ${{ secrets.IntegrationApiOktaUsername }}
        password: ${{ secrets.IntegrationApiOktaPassword }}
        contentType: 'application/x-www-form-urlencoded'
        data: 'grant_type=client_credentials'
    
    - name: "Send callback"
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ secrets.IntegrationApiMigrationCallbackEndpoint }}
        method: 'POST'
        data: '{"migrationRunResult": "${{ steps.ExecuteMigrations.outcome }}","tenantDetails": "$${{ toJson(github.event.client_payload) }}","error": "${{ steps.ExecuteMigrations.outputs.MIGRATIONS_RUN_ERROR }}"}'
        bearerToken: ${{ fromJson(steps.BearerTokenRequest.outputs.response).access_token }}